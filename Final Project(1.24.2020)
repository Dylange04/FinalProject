#Lab 4
# 1/24/2020
#Dylan Lange
    #Notes for Citing:
        #Add comment of who you worked with
        #Also include when they helped


import sys

def Problem1():
    #Problem 1 (ProjectEuler)
        #MULTIPLES OF 3 AND 5
        
    print('Problem 1 of Projecteuler!')

    NUMBER = 1000
    naturalnum = []
    start = 0
    five = 0
    three = 0
    threelist = []
    fivelist = []
    threemult = 0
    fivemult = 0

    while NUMBER >= start:
        #Adds the starting Values to the list(0)
        #Start allows the 3 and 5 to be multiplied by every value(1,2,3,4,5,6)
            #Also allows for the length of the list to be adjusted(Control how many multiples of 3 and 5 are produced)
        naturalnum.append(start)    

        if NUMBER > start*3:
            three = start*3
            threemult = three + threemult
            #Adds 3 to the multiple, aswell as adds the value to the list(Multiple of 3's)
            threelist.append(three)

        if NUMBER > start*5:
            five = start*5
            fivemult = five + fivemult
            #Adds 5 to the multiple, aswell as adds the value to the list(Multiple of 5's)
            fivelist.append(five)



        start = start + 1
    #Combines the Multiples of 3 and 5
    total = threemult + fivemult

    return(total)

def Problem2():
    #Problem 2 (ProjectEuler)
        #EVEN FIBONACCI NUMBERS
        #FIBONACCI = A SEQUENCE COMPRISED OF ADDING THE TWO PREVIOUS TERMS : 1,2,3,5,8,13,21,34,55,89(FIRST 10)

    print('Problem 2 of Projecteuler!')

    firstnum = 1
    secondnum = 2
    temp = 0
    total = 0
    numlist = []

    #INPUT THE AMOUNT OF TERMS YOU WOULD LIKE THE SEQUENCE TO BE
    term = 4000000

    #adding the 1 and 2 to numlist
    numlist.append(firstnum)
    numlist.append(secondnum)


    while len(numlist) < term:
        temp = secondnum


        if temp % 2 == 0:
            # This checks the two previous integers, though divison
            total += temp

        temp = firstnum + secondnum
        #Allows the values of firtnum and secondnum to switch(Need 3 Variables to switch values between 2 variables)
        firstnum = secondnum
        secondnum = temp
        numlist.append(temp)


    return(numlist)

def Problem3():
    #Problem 3 (ProjectEuler)
    #Largest Prime Factor
    print('Problem 3 of Projecteuler!')


    #CREATES A LIST OF ALL PRIME NUMBERS

        primenum = 13195
        primelist = []

        for num in range(0,primenum + 1):
            if num > 1:
            #EXCLUDES 1 FROM THE LIST(NOT A PRIME NUMBER)
                for temp in range(2, num):
                #READS ALL THE NUMBERS IN THE RANGE OF 2 AND THE DESIRED NUMBER
                    if (num % temp) == 0:
                        break
        
                else:    
                    primelist.append(num)
    
        lastnum = primelist[len(primelist)-1]
        print(primelist)

    # DETERMINES THE PRIME FACTORIZATION(MULTIPLES)
        primenum = 600851475143
        primefactorlist = []
        temp = 2
        while temp * temp < primenum:
            while primenum % temp == 0:
                primenum = primenum / temp
            temp = temp + 1
        primefactorlist.append(primenum)

        print ('Largest Prime Factor of', str(600851475143) , 'is' , str(primefactorlist))

def Problem4():
    #Problem 4 (ProjectEuler)
    #A palindromic number reads the same both ways. 
    # The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.
    #Find the largest palindrome made from the product of two 3-digit numbers.
    print('Problem 4 of Projecteuler!')

    palindromelist = []
    #Creates values that are within the range of being three digit numbers
    for x in range(100,999):
        for temp in range(100,999):
            number = str(temp*x).split()[0]
            if len(number) == 6:
                



def Problem5():
    #Problem 5 (ProjectEuler)

    print('Problem 5 of Projecteuler!')

def Problem6():
    #Problem 6 (ProjectEuler)

    print('Problem 6 of Projecteuler!')

def Problem7():
    #Problem 7 (ProjectEuler)

    print('Problem 7 of Projecteuler!')

def Problem8():
    #Problem 8 (ProjectEuler)

    print('Problem 8 of Projecteuler!')

def Problem9():
    #Problem 9 (ProjectEuler)

    print('Problem 9 of Projecteuler!')

def Problem10():
    #Problem 10 (ProjectEuler)

    print('Problem 10 of Projecteuler!')



# RUNNING PROGRAM
# RUNNING THE PROGRAM
# PROGRAM RUNNING
# PROGRAM THE RUNNING

print(Problem4())
